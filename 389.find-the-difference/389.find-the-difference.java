//You are given two strings s and t. 
//
// String t is generated by random shuffling string s and then add one more 
//letter at a random position. 
//
// Return the letter that was added to t. 
//
// 
// Example 1: 
//
// 
//Input: s = "abcd", t = "abcde"
//Output: "e"
//Explanation: 'e' is the letter that was added.
// 
//
// Example 2: 
//
// 
//Input: s = "", t = "y"
//Output: "y"
// 
//
// 
// Constraints: 
//
// 
// 0 <= s.length <= 1000 
// t.length == s.length + 1 
// s and t consist of lowercase English letters. 
// 
//
// Related Topics Hash Table String Bit Manipulation Sorting 👍 3236 👎 397


import java.util.Arrays;
import java.util.HashSet;

//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public char findTheDifference(String s, String t) {
        int[] letter = new int[26];
        for (char c : s.toCharArray()) {
            letter[c - 'a']++;
        }
        for (char c : t.toCharArray()) {
            letter[c - 'a']--;
        }
        for (int i = 0; i < letter.length; i++) {
            if (letter[i] == -1) return (char)('a' + i);
        }
        return 'a'; // dummy return
    }
}
//leetcode submit region end(Prohibit modification and deletion)
